
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: /home/harshith/.volare/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: /openlane/designs/matrixmul_sys/src/matrixmul.v
Parsing SystemVerilog input from `/openlane/designs/matrixmul_sys/src/matrixmul.v' to AST representation.
Storing AST representation for module `$abstract\processing_element'.
Storing AST representation for module `$abstract\matrix_mult'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

4. Executing AST frontend in derive mode using pre-parsed AST for module `\matrix_mult'.
Generating RTLIL representation for module `\matrix_mult'.

4.1. Analyzing design hierarchy..
Top module:  \matrix_mult

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\processing_element'.
Generating RTLIL representation for module `\processing_element'.

4.3. Analyzing design hierarchy..
Top module:  \matrix_mult
Used module:     \processing_element

4.4. Analyzing design hierarchy..
Top module:  \matrix_mult
Used module:     \processing_element
Removing unused module `$abstract\matrix_mult'.
Removing unused module `$abstract\processing_element'.
Removed 2 unused modules.
Mapping positional arguments of cell matrix_mult.PE_8 (processing_element).
Mapping positional arguments of cell matrix_mult.PE_7 (processing_element).
Mapping positional arguments of cell matrix_mult.PE_6 (processing_element).
Mapping positional arguments of cell matrix_mult.PE_5 (processing_element).
Mapping positional arguments of cell matrix_mult.PE_4 (processing_element).
Mapping positional arguments of cell matrix_mult.PE_3 (processing_element).
Mapping positional arguments of cell matrix_mult.PE_2 (processing_element).
Mapping positional arguments of cell matrix_mult.PE_1 (processing_element).
Mapping positional arguments of cell matrix_mult.PE_0 (processing_element).

5. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/matrixmul_sys/runs/RUN_2025.09.01_13.46.57/tmp/synthesis/hierarchy.dot'.
Dumping module matrix_mult to page 1.
Renaming module matrix_mult to matrix_mult.

6. Executing TRIBUF pass.

7. Executing HIERARCHY pass (managing design hierarchy).

7.1. Analyzing design hierarchy..
Top module:  \matrix_mult
Used module:     \processing_element

7.2. Analyzing design hierarchy..
Top module:  \matrix_mult
Used module:     \processing_element
Removed 0 unused modules.

8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/openlane/designs/matrixmul_sys/src/matrixmul.v:9$37 in module processing_element.
Removed a total of 0 dead cases.

10. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 0 assignments to connections.

11. Executing PROC_INIT pass (extract init attributes).

12. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `\processing_element.$proc$/openlane/designs/matrixmul_sys/src/matrixmul.v:9$37'.

13. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

14. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\processing_element.$proc$/openlane/designs/matrixmul_sys/src/matrixmul.v:9$37'.
     1/1: $0\C_out[15:0]

15. Executing PROC_DLATCH pass (convert process syncs to latches).

16. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\processing_element.\C_out' using process `\processing_element.$proc$/openlane/designs/matrixmul_sys/src/matrixmul.v:9$37'.
  created $adff cell `$procdff$40' with positive edge clock and positive level reset.

17. Executing PROC_MEMWR pass (convert process memory writes to cells).

18. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `processing_element.$proc$/openlane/designs/matrixmul_sys/src/matrixmul.v:9$37'.
Cleaned up 0 empty switches.

19. Executing CHECK pass (checking for obvious problems).
Checking module matrix_mult...
Checking module processing_element...
Found and reported 0 problems.

20. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.
Optimizing module processing_element.

21. Executing FLATTEN pass (flatten design).
Deleting now unused module processing_element.
<suppressed ~9 debug messages>

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.
<suppressed ~9 debug messages>

23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..
Removed 0 unused cells and 27 unused wires.
<suppressed ~10 debug messages>

24. Executing OPT pass (performing simple optimizations).

24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.

24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \matrix_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \matrix_mult.
Performed a total of 0 changes.

24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

24.6. Executing OPT_DFF pass (perform DFF optimizations).

24.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..

24.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.

24.9. Finished OPT passes. (There is nothing left to do.)

25. Executing FSM pass (extract and optimize FSM).

25.1. Executing FSM_DETECT pass (finding FSMs in design).

25.2. Executing FSM_EXTRACT pass (extracting FSM from design).

25.3. Executing FSM_OPT pass (simple optimizations of FSMs).

25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..

25.5. Executing FSM_OPT pass (simple optimizations of FSMs).

25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

26. Executing OPT pass (performing simple optimizations).

26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.

26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \matrix_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \matrix_mult.
Performed a total of 0 changes.

26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

26.6. Executing OPT_DFF pass (perform DFF optimizations).

26.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..

26.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.

26.9. Finished OPT passes. (There is nothing left to do.)

27. Executing WREDUCE pass (reducing word size of cells).

28. Executing PEEPOPT pass (run peephole optimizers).

29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..

30. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module matrix_mult:
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$2 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$4 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$6 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$8 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$10 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$12 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$14 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$16 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$18 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$20 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$22 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$24 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$26 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$28 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$30 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$32 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$34 ($add).
  creating $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$36 ($add).
  creating $macc model for $flatten\PE_0.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38 ($mul).
  creating $macc model for $flatten\PE_1.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38 ($mul).
  creating $macc model for $flatten\PE_2.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38 ($mul).
  creating $macc model for $flatten\PE_3.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38 ($mul).
  creating $macc model for $flatten\PE_4.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38 ($mul).
  creating $macc model for $flatten\PE_5.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38 ($mul).
  creating $macc model for $flatten\PE_6.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38 ($mul).
  creating $macc model for $flatten\PE_7.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38 ($mul).
  creating $macc model for $flatten\PE_8.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$1 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$3 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$5 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$7 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$11 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$9 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$13 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$15 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$17 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$19 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$21 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$23 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$25 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$27 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$29 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$31 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$33 ($mul).
  creating $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$35 ($mul).
  merging $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$34 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$36.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$35 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$36.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$33 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$36.
  merging $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$30 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$32.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$31 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$32.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$29 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$32.
  merging $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$26 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$28.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$27 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$28.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$25 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$28.
  merging $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$22 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$24.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$23 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$24.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$21 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$24.
  merging $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$18 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$20.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$19 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$20.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$17 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$20.
  merging $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$14 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$16.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$15 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$16.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$13 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$16.
  merging $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$10 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$12.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$11 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$12.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$9 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$12.
  merging $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$6 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$8.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$7 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$8.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$5 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$8.
  merging $macc model for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$2 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$4.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$3 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$4.
  merging $macc model for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$1 into $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$4.
  creating $macc cell for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$36: $auto$alumacc.cc:365:replace_macc$41
  creating $macc cell for $flatten\PE_0.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38: $auto$alumacc.cc:365:replace_macc$42
  creating $macc cell for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$32: $auto$alumacc.cc:365:replace_macc$43
  creating $macc cell for $flatten\PE_3.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38: $auto$alumacc.cc:365:replace_macc$44
  creating $macc cell for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$28: $auto$alumacc.cc:365:replace_macc$45
  creating $macc cell for $flatten\PE_6.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38: $auto$alumacc.cc:365:replace_macc$46
  creating $macc cell for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$24: $auto$alumacc.cc:365:replace_macc$47
  creating $macc cell for $flatten\PE_1.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38: $auto$alumacc.cc:365:replace_macc$48
  creating $macc cell for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$20: $auto$alumacc.cc:365:replace_macc$49
  creating $macc cell for $flatten\PE_7.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38: $auto$alumacc.cc:365:replace_macc$50
  creating $macc cell for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$16: $auto$alumacc.cc:365:replace_macc$51
  creating $macc cell for $flatten\PE_2.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38: $auto$alumacc.cc:365:replace_macc$52
  creating $macc cell for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$12: $auto$alumacc.cc:365:replace_macc$53
  creating $macc cell for $flatten\PE_5.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38: $auto$alumacc.cc:365:replace_macc$54
  creating $macc cell for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$8: $auto$alumacc.cc:365:replace_macc$55
  creating $macc cell for $flatten\PE_8.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38: $auto$alumacc.cc:365:replace_macc$56
  creating $macc cell for $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$4: $auto$alumacc.cc:365:replace_macc$57
  creating $macc cell for $flatten\PE_4.$mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:13$38: $auto$alumacc.cc:365:replace_macc$58
  created 0 $alu and 18 $macc cells.

31. Executing SHARE pass (SAT-based resource sharing).
Found 18 cells in module matrix_mult that may be considered for resource sharing.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$35 ($mul):
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$35
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$33 ($mul):
    Found cell that is never activated: $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$34
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$33
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$31 ($mul):
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$31
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$29 ($mul):
    Found cell that is never activated: $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$30
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$29
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$27 ($mul):
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$27
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$25 ($mul):
    Found cell that is never activated: $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$26
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$25
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$23 ($mul):
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$23
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$21 ($mul):
    Found cell that is never activated: $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$22
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$21
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$19 ($mul):
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$19
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$17 ($mul):
    Found cell that is never activated: $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$18
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$17
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$15 ($mul):
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$15
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$13 ($mul):
    Found cell that is never activated: $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$14
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$13
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$9 ($mul):
    Found cell that is never activated: $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$10
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$9
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$11 ($mul):
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$11
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$7 ($mul):
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$7
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$5 ($mul):
    Found cell that is never activated: $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$6
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$5
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$3 ($mul):
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$3
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$1 ($mul):
    Found cell that is never activated: $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$2
    Found cell that is never activated: $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$1
    Cell is never active. Sharing is pointless, we simply remove it.
Removing 27 cells in module matrix_mult:
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$1 ($mul).
  Removing cell $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$2 ($add).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:36$3 ($mul).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$5 ($mul).
  Removing cell $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$6 ($add).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:37$7 ($mul).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$11 ($mul).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$9 ($mul).
  Removing cell $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:38$10 ($add).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$13 ($mul).
  Removing cell $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$14 ($add).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:39$15 ($mul).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$17 ($mul).
  Removing cell $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$18 ($add).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:40$19 ($mul).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$21 ($mul).
  Removing cell $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$22 ($add).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:41$23 ($mul).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$25 ($mul).
  Removing cell $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$26 ($add).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:42$27 ($mul).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$29 ($mul).
  Removing cell $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$30 ($add).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:43$31 ($mul).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$33 ($mul).
  Removing cell $add$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$34 ($add).
  Removing cell $mul$/openlane/designs/matrixmul_sys/src/matrixmul.v:44$35 ($mul).

32. Executing OPT pass (performing simple optimizations).

32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.

32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \matrix_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \matrix_mult.
Performed a total of 0 changes.

32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

32.6. Executing OPT_DFF pass (perform DFF optimizations).

32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.

32.9. Rerunning OPT passes. (Maybe there is more to do..)

32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \matrix_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \matrix_mult.
Performed a total of 0 changes.

32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

32.13. Executing OPT_DFF pass (perform DFF optimizations).

32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..

32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.

32.16. Finished OPT passes. (There is nothing left to do.)

33. Executing MEMORY pass.

33.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

33.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

33.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

33.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

33.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

33.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..

33.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

33.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

33.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..

33.10. Executing MEMORY_COLLECT pass (generating $mem cells).

34. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

35.3. Executing OPT_DFF pass (perform DFF optimizations).

35.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..

35.5. Finished fast OPT passes.

36. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

37. Executing OPT pass (performing simple optimizations).

37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.

37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

37.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \matrix_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

37.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \matrix_mult.
Performed a total of 0 changes.

37.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

37.6. Executing OPT_SHARE pass.

37.7. Executing OPT_DFF pass (perform DFF optimizations).

37.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..

37.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.

37.10. Finished OPT passes. (There is nothing left to do.)

38. Executing TECHMAP pass (map to technology primitives).

38.1. Executing Verilog-2005 frontend: /nix/store/sx2v0i73mn1ih2z1nk61pm9n5gjgpidy-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nix/store/sx2v0i73mn1ih2z1nk61pm9n5gjgpidy-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

38.2. Continuing TECHMAP pass.
Using extmapper maccmap for cells of type $macc.
  add \A_3 * \B_1 (8x8 bits, unsigned)
  add \A_6 * \B_2 (8x8 bits, unsigned)
  add \A_3 * \B_2 (8x8 bits, unsigned)
  add \A_0 * \B_2 (8x8 bits, unsigned)
  add \A_6 * \B_1 (8x8 bits, unsigned)
  add \A_0 * \B_1 (8x8 bits, unsigned)
  add \A_6 * \B_0 (8x8 bits, unsigned)
  add \A_3 * \B_0 (8x8 bits, unsigned)
  add \A_0 * \B_0 (8x8 bits, unsigned)
Using extmapper simplemap for cells of type $adff.
  add \PE_7.C_out (16 bits, unsigned)
  add \A_8 * \B_7 (8x8 bits, unsigned)
  add \A_7 * \B_4 (8x8 bits, unsigned)
  add \PE_4.C_out (16 bits, unsigned)
  add \A_5 * \B_7 (8x8 bits, unsigned)
  add \A_4 * \B_4 (8x8 bits, unsigned)
  add \PE_2.C_out (16 bits, unsigned)
  add \A_2 * \B_8 (8x8 bits, unsigned)
  add \A_1 * \B_5 (8x8 bits, unsigned)
  add \PE_6.C_out (16 bits, unsigned)
  add \A_8 * \B_6 (8x8 bits, unsigned)
  add \A_7 * \B_3 (8x8 bits, unsigned)
  add \PE_1.C_out (16 bits, unsigned)
  add \A_2 * \B_7 (8x8 bits, unsigned)
  add \A_1 * \B_4 (8x8 bits, unsigned)
  add \PE_5.C_out (16 bits, unsigned)
  add \A_5 * \B_8 (8x8 bits, unsigned)
  add \A_4 * \B_5 (8x8 bits, unsigned)
  add \PE_8.C_out (16 bits, unsigned)
  add \A_8 * \B_8 (8x8 bits, unsigned)
  add \A_7 * \B_5 (8x8 bits, unsigned)
  add \PE_3.C_out (16 bits, unsigned)
  add \A_5 * \B_6 (8x8 bits, unsigned)
  add \A_4 * \B_3 (8x8 bits, unsigned)
  add \PE_0.C_out (16 bits, unsigned)
  add \A_2 * \B_6 (8x8 bits, unsigned)
  add \A_1 * \B_3 (8x8 bits, unsigned)
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000010000 for cells of type $fa.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
No more expansions possible.
<suppressed ~2933 debug messages>

39. Executing OPT pass (performing simple optimizations).

39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.
<suppressed ~9927 debug messages>

39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

39.3. Executing OPT_DFF pass (perform DFF optimizations).

39.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..
Removed 513 unused cells and 2718 unused wires.
<suppressed ~514 debug messages>

39.5. Finished fast OPT passes.

40. Executing ABC pass (technology mapping using ABC).

40.1. Extracting gate netlist of module `\matrix_mult' to `<abc-temp-dir>/input.blif'..
Extracted 10764 gates and 11052 wires to a netlist network with 288 inputs and 288 outputs.

40.1.1. Executing ABC.
Running ABC command: "/nix/store/wq2q0njg3sx8wvj2akz7x1qxwyrv9xlr-yosys-abc/bin/abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

40.1.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:      198
ABC RESULTS:               AND cells:     1755
ABC RESULTS:             ORNOT cells:      288
ABC RESULTS:              NAND cells:      486
ABC RESULTS:                OR cells:     1044
ABC RESULTS:               NOR cells:      594
ABC RESULTS:            ANDNOT cells:     2961
ABC RESULTS:               XOR cells:     2448
ABC RESULTS:              XNOR cells:     1188
ABC RESULTS:        internal signals:    10476
ABC RESULTS:           input signals:      288
ABC RESULTS:          output signals:      288
Removing temp directory.

41. Executing OPT pass (performing simple optimizations).

41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.

41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

41.3. Executing OPT_DFF pass (perform DFF optimizations).

41.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..
Removed 0 unused cells and 2241 unused wires.
<suppressed ~1 debug messages>

41.5. Finished fast OPT passes.

42. Executing HIERARCHY pass (managing design hierarchy).

42.1. Analyzing design hierarchy..
Top module:  \matrix_mult

42.2. Analyzing design hierarchy..
Top module:  \matrix_mult
Removed 0 unused modules.

43. Printing statistics.

=== matrix_mult ===

   Number of wires:              10829
   Number of wire bits:          12566
   Number of public wires:          92
   Number of public wire bits:     884
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              11106
     $_ANDNOT_                    2961
     $_AND_                       1755
     $_DFF_PP0_                    144
     $_NAND_                       486
     $_NOR_                        594
     $_NOT_                        198
     $_ORNOT_                      288
     $_OR_                        1044
     $_XNOR_                      1188
     $_XOR_                       2448

44. Executing CHECK pass (checking for obvious problems).
Checking module matrix_mult...
Found and reported 0 problems.

45. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/matrixmul_sys/runs/RUN_2025.09.01_13.46.57/tmp/synthesis/post_techmap.dot'.
Dumping module matrix_mult to page 1.

46. Executing SHARE pass (SAT-based resource sharing).

47. Executing OPT pass (performing simple optimizations).

47.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.

47.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

47.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \matrix_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

47.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \matrix_mult.
Performed a total of 0 changes.

47.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\matrix_mult'.
Removed a total of 0 cells.

47.6. Executing OPT_DFF pass (perform DFF optimizations).

47.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..

47.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module matrix_mult.

47.9. Finished OPT passes. (There is nothing left to do.)

48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..
Removed 0 unused cells and 54 unused wires.
<suppressed ~54 debug messages>

49. Printing statistics.

=== matrix_mult ===

   Number of wires:              10775
   Number of wire bits:          12116
   Number of public wires:          38
   Number of public wire bits:     434
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              11106
     $_ANDNOT_                    2961
     $_AND_                       1755
     $_DFF_PP0_                    144
     $_NAND_                       486
     $_NOR_                        594
     $_NOT_                        198
     $_ORNOT_                      288
     $_OR_                        1044
     $_XNOR_                      1188
     $_XOR_                       2448

mapping tbuf

50. Executing TECHMAP pass (map to technology primitives).

50.1. Executing Verilog-2005 frontend: /home/harshith/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/harshith/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

50.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

51. Executing SIMPLEMAP pass (map simple cells to gate primitives).

52. Executing TECHMAP pass (map to technology primitives).

52.1. Executing Verilog-2005 frontend: /home/harshith/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/harshith/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

52.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

53. Executing SIMPLEMAP pass (map simple cells to gate primitives).

54. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

54.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\matrix_mult':
  mapped 144 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_2 cells.

55. Printing statistics.

=== matrix_mult ===

   Number of wires:              10919
   Number of wire bits:          12260
   Number of public wires:          38
   Number of public wire bits:     434
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              11250
     $_ANDNOT_                    2961
     $_AND_                       1755
     $_NAND_                       486
     $_NOR_                        594
     $_NOT_                        342
     $_ORNOT_                      288
     $_OR_                        1044
     $_XNOR_                      1188
     $_XOR_                       2448
     sky130_fd_sc_hd__dfrtp_2      144

[INFO]: USING STRATEGY AREA 0

56. Executing ABC pass (technology mapping using ABC).

56.1. Extracting gate netlist of module `\matrix_mult' to `/tmp/yosys-abc-GoyMFD/input.blif'..
Extracted 11106 gates and 11395 wires to a netlist network with 289 inputs and 432 outputs.

56.1.1. Executing ABC.
Running ABC command: "/nix/store/wq2q0njg3sx8wvj2akz7x1qxwyrv9xlr-yosys-abc/bin/abc" -s -f /tmp/yosys-abc-GoyMFD/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-GoyMFD/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-GoyMFD/input.blif 
ABC: + read_lib -w /openlane/designs/matrixmul_sys/runs/RUN_2025.09.01_13.46.57/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.06 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/matrixmul_sys/runs/RUN_2025.09.01_13.46.57/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.08 sec
ABC: Memory =    9.54 MB. Time =     0.08 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/matrixmul_sys/runs/RUN_2025.09.01_13.46.57/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/matrixmul_sys/runs/RUN_2025.09.01_13.46.57/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 20000.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 20000.0 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 20000.0 
ABC: Current delay (6111.79 ps) does not exceed the target delay (20000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 20000.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =  10261 (  9.5 %)   Cap = 10.3 ff (  2.1 %)   Area =    94904.77 ( 90.5 %)   Delay =  6550.25 ps  (  1.1 %)               
ABC: Path  0 --     136 : 0    2 pi                        A =   0.00  Df =  15.8   -9.3 ps  S =  27.6 ps  Cin =  0.0 ff  Cout =   4.4 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    3339 : 1   10 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 205.2  -65.6 ps  S = 211.6 ps  Cin =  2.1 ff  Cout =  17.3 ff  Cmax = 130.0 ff  G =  800  
ABC: Path  2 --    3373 : 1   10 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 601.0 -211.6 ps  S = 451.2 ps  Cin =  2.1 ff  Cout =  38.2 ff  Cmax = 130.0 ff  G = 1741  
ABC: Path  3 --    7346 : 3    2 sky130_fd_sc_hd__a21oi_2  A =   8.76  Df = 702.0 -125.8 ps  S =  92.4 ps  Cin =  4.6 ff  Cout =   3.3 ff  Cmax = 128.2 ff  G =   68  
ABC: Path  4 --    7348 : 4    4 sky130_fd_sc_hd__or4bb_2  A =  12.51  Df =1398.4 -658.0 ps  S = 137.3 ps  Cin =  1.5 ff  Cout =  13.9 ff  Cmax = 312.2 ff  G =  904  
ABC: Path  5 --    7351 : 4    3 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =1744.7 -599.1 ps  S =  65.5 ps  Cin =  2.4 ff  Cout =   9.6 ff  Cmax = 325.0 ff  G =  390  
ABC: Path  6 --    7441 : 3    2 sky130_fd_sc_hd__a21bo_2  A =  10.01  Df =1969.1 -639.1 ps  S =  51.1 ps  Cin =  2.0 ff  Cout =   6.3 ff  Cmax = 288.4 ff  G =  291  
ABC: Path  7 --    7442 : 3    3 sky130_fd_sc_hd__and3_2   A =   7.51  Df =2187.5 -143.7 ps  S =  68.5 ps  Cin =  1.5 ff  Cout =   8.2 ff  Cmax = 309.5 ff  G =  527  
ABC: Path  8 --    7444 : 3    3 sky130_fd_sc_hd__or3_2    A =   7.51  Df =2665.2 -364.5 ps  S =  99.1 ps  Cin =  1.5 ff  Cout =   9.4 ff  Cmax = 310.4 ff  G =  597  
ABC: Path  9 --    7447 : 4    3 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =3004.6 -259.4 ps  S =  70.8 ps  Cin =  2.4 ff  Cout =  11.7 ff  Cmax = 325.0 ff  G =  475  
ABC: Path 10 --    7448 : 3    2 sky130_fd_sc_hd__and3_2   A =   7.51  Df =3231.4 -255.5 ps  S =  64.6 ps  Cin =  1.5 ff  Cout =   7.2 ff  Cmax = 309.5 ff  G =  454  
ABC: Path 11 --    7451 : 4    3 sky130_fd_sc_hd__o211a_2  A =  10.01  Df =3502.8 -127.4 ps  S =  73.8 ps  Cin =  2.4 ff  Cout =   8.7 ff  Cmax = 268.3 ff  G =  346  
ABC: Path 12 --    7452 : 3    2 sky130_fd_sc_hd__or3_2    A =   7.51  Df =3930.7 -280.3 ps  S =  91.2 ps  Cin =  1.5 ff  Cout =   6.9 ff  Cmax = 310.4 ff  G =  442  
ABC: Path 13 --    7455 : 4    3 sky130_fd_sc_hd__a211oi_2 A =  12.51  Df =4194.7 -457.4 ps  S = 252.8 ps  Cin =  4.4 ff  Cout =   9.8 ff  Cmax =  88.8 ff  G =  209  
ABC: Path 14 --    7530 : 3    2 sky130_fd_sc_hd__o21ba_2  A =  10.01  Df =4401.9 -373.1 ps  S =  91.6 ps  Cin =  2.1 ff  Cout =  13.2 ff  Cmax = 264.6 ff  G =  614  
ABC: Path 15 --    7531 : 2    3 sky130_fd_sc_hd__xor2_2   A =  16.27  Df =4632.2 -344.0 ps  S = 232.0 ps  Cin =  8.6 ff  Cout =  15.3 ff  Cmax = 130.0 ff  G =  172  
ABC: Path 16 --    7670 : 3    1 sky130_fd_sc_hd__nand3_2  A =  10.01  Df =4707.2 -355.6 ps  S =  64.7 ps  Cin =  4.4 ff  Cout =   2.4 ff  Cmax = 260.0 ff  G =   50  
ABC: Path 17 --    7671 : 5    2 sky130_fd_sc_hd__a311o_2  A =  11.26  Df =5032.3 -344.4 ps  S =  66.0 ps  Cin =  2.3 ff  Cout =   7.0 ff  Cmax = 298.5 ff  G =  297  
ABC: Path 18 --    7676 : 5    3 sky130_fd_sc_hd__a41o_2   A =  11.26  Df =5340.6 -411.7 ps  S = 101.3 ps  Cin =  2.3 ff  Cout =  16.6 ff  Cmax = 325.0 ff  G =  682  
ABC: Path 19 --    7809 : 4    2 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =5688.3 -610.7 ps  S =  59.3 ps  Cin =  2.4 ff  Cout =   7.1 ff  Cmax = 325.0 ff  G =  287  
ABC: Path 20 --    7837 : 4    2 sky130_fd_sc_hd__a31o_2   A =   8.76  Df =5945.5 -690.1 ps  S =  80.7 ps  Cin =  2.4 ff  Cout =  11.0 ff  Cmax = 271.9 ff  G =  451  
ABC: Path 21 --    7839 : 3    1 sky130_fd_sc_hd__o21ba_2  A =  10.01  Df =6158.7 -751.9 ps  S =  69.1 ps  Cin =  2.1 ff  Cout =   9.0 ff  Cmax = 264.6 ff  G =  423  
ABC: Path 22 --    7850 : 2    1 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =6550.2 -909.8 ps  S = 453.9 ps  Cin =  8.5 ff  Cout =  33.4 ff  Cmax = 121.8 ff  G =  394  
ABC: Start-point = pi135 (\B_6 [0]).  End-point = po151 (\C_0 [15]).
ABC: + print_stats -m 
ABC: netlist                       : i/o =  289/  432  lat =    0  nd = 10261  edge =  25969  area =94922.37  delay =24.00  lev = 24
ABC: + write_blif /tmp/yosys-abc-GoyMFD/output.blif 

56.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o41ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a311oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o311ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o32ai_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:       90
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a311o_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a32oi_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:      111
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:      112
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:       46
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:       77
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:       53
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:       54
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:       64
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:       82
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:      309
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:      284
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:       46
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:       88
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:      134
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:      149
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:      192
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:       43
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:      430
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:      361
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:      187
ABC RESULTS:   sky130_fd_sc_hd__nand4_2 cells:      101
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:      202
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:      178
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:      454
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:      338
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:      218
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:      509
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:      574
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:      855
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:      949
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:      424
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:      270
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:     1134
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:      719
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:      260
ABC RESULTS:        internal signals:    10674
ABC RESULTS:           input signals:      289
ABC RESULTS:          output signals:      432
Removing temp directory.

57. Executing SETUNDEF pass (replace undef values with defined constants).

58. Executing HILOMAP pass (mapping to constant drivers).

59. Executing SPLITNETS pass (splitting up multi-bit signals).

60. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \matrix_mult..
Removed 171 unused cells and 12430 unused wires.
<suppressed ~172 debug messages>

61. Executing INSBUF pass (insert buffer cells for connected wires).

62. Executing CHECK pass (checking for obvious problems).
Checking module matrix_mult...
Found and reported 0 problems.

63. Printing statistics.

=== matrix_mult ===

   Number of wires:              10290
   Number of wire bits:          10551
   Number of public wires:         173
   Number of public wire bits:     434
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10405
     sky130_fd_sc_hd__a211o_2      112
     sky130_fd_sc_hd__a211oi_2      64
     sky130_fd_sc_hd__a21bo_2      111
     sky130_fd_sc_hd__a21boi_2       1
     sky130_fd_sc_hd__a21o_2       424
     sky130_fd_sc_hd__a21oi_2      509
     sky130_fd_sc_hd__a22o_2       187
     sky130_fd_sc_hd__a22oi_2      284
     sky130_fd_sc_hd__a2bb2o_2      54
     sky130_fd_sc_hd__a311o_2        3
     sky130_fd_sc_hd__a311oi_2       1
     sky130_fd_sc_hd__a31o_2       218
     sky130_fd_sc_hd__a31oi_2       43
     sky130_fd_sc_hd__a32o_2         5
     sky130_fd_sc_hd__a32oi_2        9
     sky130_fd_sc_hd__a41o_2         1
     sky130_fd_sc_hd__and2_2       454
     sky130_fd_sc_hd__and2b_2      338
     sky130_fd_sc_hd__and3_2       574
     sky130_fd_sc_hd__and3b_2        4
     sky130_fd_sc_hd__and4_2       309
     sky130_fd_sc_hd__and4b_2       12
     sky130_fd_sc_hd__and4bb_2      77
     sky130_fd_sc_hd__buf_1        719
     sky130_fd_sc_hd__dfrtp_2      144
     sky130_fd_sc_hd__inv_2        260
     sky130_fd_sc_hd__mux2_2        18
     sky130_fd_sc_hd__nand2_2      949
     sky130_fd_sc_hd__nand3_2      270
     sky130_fd_sc_hd__nand3b_2       7
     sky130_fd_sc_hd__nand4_2      101
     sky130_fd_sc_hd__nor2_2       855
     sky130_fd_sc_hd__nor3_2        88
     sky130_fd_sc_hd__nor3b_2       13
     sky130_fd_sc_hd__nor4_2         3
     sky130_fd_sc_hd__o211a_2       82
     sky130_fd_sc_hd__o211ai_2      90
     sky130_fd_sc_hd__o21a_2       134
     sky130_fd_sc_hd__o21ai_2      202
     sky130_fd_sc_hd__o21ba_2      149
     sky130_fd_sc_hd__o21bai_2      46
     sky130_fd_sc_hd__o221ai_2       1
     sky130_fd_sc_hd__o22a_2        13
     sky130_fd_sc_hd__o22ai_2        2
     sky130_fd_sc_hd__o2bb2a_2      53
     sky130_fd_sc_hd__o2bb2ai_2      9
     sky130_fd_sc_hd__o311a_2        3
     sky130_fd_sc_hd__o311ai_2       2
     sky130_fd_sc_hd__o31a_2         5
     sky130_fd_sc_hd__o31ai_2        7
     sky130_fd_sc_hd__o32a_2         5
     sky130_fd_sc_hd__o32ai_2        4
     sky130_fd_sc_hd__o41ai_2        1
     sky130_fd_sc_hd__or2_2        361
     sky130_fd_sc_hd__or2b_2       192
     sky130_fd_sc_hd__or3_2        178
     sky130_fd_sc_hd__or3b_2        19
     sky130_fd_sc_hd__or4_2         11
     sky130_fd_sc_hd__or4b_2         5
     sky130_fd_sc_hd__or4bb_2       46
     sky130_fd_sc_hd__xnor2_2     1134
     sky130_fd_sc_hd__xor2_2       430

   Chip area for module '\matrix_mult': 98688.400000

64. Executing Verilog backend.
Dumping module `\matrix_mult'.

65. Executing JSON backend.

End of script. Logfile hash: c0c77fef91, CPU: user 4.17s system 0.12s, MEM: 82.00 MB peak
Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)
Time spent: 83% 2x abc (19 sec), 3% 18x opt_expr (0 sec), ...
